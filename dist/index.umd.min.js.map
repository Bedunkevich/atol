{"version":3,"file":"index.umd.min.js","sources":["../src/uuid/rng.ts","../src/uuid/regex.ts","../src/uuid/stringify.ts","../src/uuid/index.ts","../src/uuid/validate.ts","../src/helpers.ts","../src/types.ts","../src/mapping.ts","../src/api.ts","../src/index.ts"],"sourcesContent":["const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\n\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.getRandomValues(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n","import validate from './validate';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex: any = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr: any, offset = 0): string {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (\n    byteToHex[arr[offset + 0]] +\n    byteToHex[arr[offset + 1]] +\n    byteToHex[arr[offset + 2]] +\n    byteToHex[arr[offset + 3]] +\n    '-' +\n    byteToHex[arr[offset + 4]] +\n    byteToHex[arr[offset + 5]] +\n    '-' +\n    byteToHex[arr[offset + 6]] +\n    byteToHex[arr[offset + 7]] +\n    '-' +\n    byteToHex[arr[offset + 8]] +\n    byteToHex[arr[offset + 9]] +\n    '-' +\n    byteToHex[arr[offset + 10]] +\n    byteToHex[arr[offset + 11]] +\n    byteToHex[arr[offset + 12]] +\n    byteToHex[arr[offset + 13]] +\n    byteToHex[arr[offset + 14]] +\n    byteToHex[arr[offset + 15]]\n  ).toLowerCase();\n\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;\n","import rng from './rng';\nimport stringify from './stringify';\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId: unknown;\nlet _clockseq: unknown;\n\n// Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options?: any, buf?: any, offset?: any) {\n  let i = (buf && offset) || 0;\n  const b = buf || new Array(16);\n\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1],\n        seedBytes[2],\n        seedBytes[3],\n        seedBytes[4],\n        seedBytes[5],\n      ];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = ((seedBytes[6] << 8) | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = (clockseq + 1) & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = (tl >>> 24) & 0xff;\n  b[i++] = (tl >>> 16) & 0xff;\n  b[i++] = (tl >>> 8) & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  const tmh = ((msecs / 0x100000000) * 10000) & 0xfffffff;\n  b[i++] = (tmh >>> 8) & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = ((tmh >>> 24) & 0xf) | 0x10; // include version\n  b[i++] = (tmh >>> 16) & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = (clockseq >>> 8) | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport { v1 };\n","import REGEX from './regex';\n\nfunction validate(uuid: string): boolean {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;\n","export const delay = (time: number): Promise<void> =>\n  new Promise((resolve) => setTimeout(resolve, time));\n","import type { AxiosPromise } from 'axios';\n\ndeclare global {\n  interface Window {\n    ajv7: {\n      default: any;\n    };\n  }\n}\n\nexport type Options =\n  | Partial<{\n      baseUrl: string;\n      maxCalls: number;\n      delayBetweenCalls: number;\n      maxCodeLength: number;\n    }>\n  | undefined;\n\nexport type TaskResponce = Partial<{\n  uuid: string;\n  number: number;\n  isBlocked: boolean;\n  blockedUUID: string;\n  error: {\n    code: number;\n    description: string;\n  };\n}>;\n\nexport enum TaskResultStatus {\n  ready = 'ready',\n  error = 'error',\n  wait = 'wait',\n  inProgress = 'inProgress',\n  interrupted = 'interrupted',\n  blocked = 'blocked',\n  canceled = 'canceled',\n}\n\nexport enum RequestTypes {\n  openShift = 'openShift',\n  closeShift = 'closeShift',\n  cashIn = 'cashIn',\n  cashOut = 'cashOut',\n  sell = 'sell',\n  sellReturn = 'sellReturn',\n  buy = 'buy',\n  buyReturn = 'buyReturn',\n  reportX = 'reportX',\n}\n\nexport type TaxationType =\n  | 'osn' // общая\n  | 'usnIncome' // упрощенная (Доход)\n  | 'usnIncomeOutcome' // упрощенная (Доход минус Расход)\n  | 'envd' // единый налог на вмененный доход\n  | 'esn' // единый сельскохозяйственный налог\n  | 'patent'; // патентная система налогообложения\n\nexport type TaskResultResponce = {\n  results: {\n    error: {\n      code: number;\n      description: string;\n    };\n    status: TaskResultStatus;\n  }[];\n};\n\nexport type Session = {\n  taxationType: TaxationType;\n  operator: {\n    name: string;\n    vatin?: string; // ИНН оператора\n  };\n};\n\nexport type PositionTax =\n  | 'none' // без НДС\n  | 'vat0' // НДС 0%\n  | 'vat10' // НДС 10%\n  | 'vat110' // НДС 10/110\n  | 'vat18' // НДС 18%\n  | 'vat118' // НДС 18/118%\n  | 'vat20' // НДС 20%\n  | 'vat120'; // НДС 20/120%\n\nexport type Item = {\n  type: 'position';\n  name: string; // Наименование\n  price: number; // Цена за единицу товара\n  quantity: number; // Количество товара\n  amount: number; // Сумма позиции\n  infoDiscountAmount?: number; // Информационная скидка. Не влияет на сумму позиции, остальные параметры должны передаваться с учетом её.\n  tax: {\n    type: PositionTax;\n    sum?: number; // Сумма налога\n  };\n  paymentMethod?:\n    | 'fullPrepayment' // По умолчанию: предоплата 100%\n    | 'prepayment' // предоплата\n    | 'advance' // аванс\n    | 'fullPayment' // полный расчет\n    | 'partialPayment' // частичный расчет и кредит\n    | 'credit' // передача в кредит\n    | 'creditPayment'; // оплата кредита\n  paymentObject?: 'commodity' | 'excise' | 'job' | 'service'; // По умолчанию: commodity\n  department?: number; // Отдел / секция. По умолчанию: 1\n  markingCode?: {\n    type?: 'other' | 'egais20' | 'egais30'; // Тип марки. По умолчанию: other\n    mark: string; // base64-представление кода маркировки\n  };\n};\n\nexport type Payment = {\n  type:\n    | 'cash' // наличными\n    | '0'\n    | 'electronicaly' // безналичными\n    | '1'\n    | 'prepaid' // предварительная оплата (аванс)\n    | '2'\n    | 'credir' // последующая оплата (кредит)\n    | '3'\n    | 'other' // иная форма оплаты (встречное предоставление)\n    | '4'\n    | string;\n  sum: number;\n};\n\nexport type MinimumArray<T> = [T, ...T[]];\n\nexport type Sell = {\n  items: MinimumArray<Item>;\n  payments: MinimumArray<Payment>;\n  total?: number; // Итог чека. Может отличаться от суммы позиций на значение,\n  // равное копейкам чека. Если не задан - высчитывается автоматически из суммы всех позиций\n};\n\nexport type SellRequest = { type: RequestTypes } & Session & Sell;\n\nexport type LegacyCallback = (success: boolean, data: any) => void;\n\nexport type AtolDriverInterface = {\n  openShift: () => Promise<AxiosPromise<TaskResponce>>;\n  closeShift: () => Promise<AxiosPromise<TaskResponce>>;\n  cashIn: (sum: number) => Promise<AxiosPromise<TaskResponce>>;\n  cashOut: (sum: number) => Promise<AxiosPromise<TaskResponce>>;\n  sell: (data: Sell) => Promise<AxiosPromise<TaskResponce>>;\n  reportX: () => Promise<AxiosPromise<TaskResponce>>;\n  checkStatus: (uuid: string, callIndex?: number) => Promise<TaskResultStatus>;\n  fprint: any;\n};\n","import currency from 'currency.js';\nimport type sellMock from './mocks/sell.json';\nimport type { Item, Payment } from './types';\n\ntype LegacySell = typeof sellMock;\n\nexport const legacyMapSell = (\n  data: LegacySell,\n  maxCodeLength?: number,\n): { items: Item[]; payments: Payment[] } => {\n  const payments: Payment[] = [];\n\n  if (data.payments.cash !== undefined) {\n    payments.push({\n      type: '0',\n      sum: data.payments.cash,\n    });\n  }\n\n  if (data.payments.card !== undefined) {\n    payments.push({\n      type: '1',\n      sum: data.payments.card,\n    });\n  }\n\n  function calcDiscountAmmount(item: LegacySell['products']['0']) {\n    try {\n      const discount_multiplier = currency(item.discount).divide(100);\n      const total_cost = currency(item.cost).multiply(item.quantity);\n      const result = currency(total_cost).multiply(discount_multiplier);\n\n      console.log(\n        'total_cost',\n        total_cost.value,\n        'discount_multiplier',\n        discount_multiplier.value,\n        'result',\n        result.value,\n      );\n      return result.value;\n    } catch (error) {\n      console.log('[calcDiscountAmmount]', error);\n      return undefined;\n    }\n  }\n\n  return {\n    items: data.products.map(\n      (item): Item => ({\n        type: 'position',\n        name: item.name,\n        price: item.cost,\n        quantity: item.quantity,\n        amount: item.total,\n        infoDiscountAmount: calcDiscountAmmount(item),\n        tax: { type: 'none' },\n        ...(item.description\n          ? {\n              markingCode: {\n                type: 'other',\n                mark: btoa(\n                  maxCodeLength\n                    ? unescape(item.description).slice(0, maxCodeLength)\n                    : unescape(item.description),\n                ),\n              },\n            }\n          : undefined),\n      }),\n    ),\n    payments,\n  };\n};\n","import axios, { AxiosPromise } from 'axios';\nimport pkg from '../package.json';\nimport SessionSchema from './validation/Session.json';\nimport SellSchema from './validation/Sell.json';\nimport { v1 as buildUUID } from './uuid';\nimport { delay } from './helpers';\nimport {\n  Session,\n  Options,\n  TaskResponce,\n  TaskResultResponce,\n  TaskResultStatus,\n  RequestTypes,\n  Sell,\n  SellRequest,\n  LegacyCallback,\n} from './types';\nimport { legacyMapSell } from './mapping';\n\nlet ajv: any;\n\nif (window.ajv7) {\n  const Ajv = window.ajv7.default;\n\n  ajv = new Ajv({\n    allErrors: true,\n    removeAdditional: true,\n    useDefaults: true,\n  });\n}\n\nconst validateData = (schema: any, data: any) => {\n  if (window.ajv7) {\n    const validate = ajv.compile(schema);\n\n    if (!validate(data)) {\n      console.log(\n        '%c[ATOL] [validation]',\n        'color:red',\n        ajv.errorsText(validate.errors),\n      );\n      throw new Error(ajv.errorsText(validate.errors));\n    }\n  }\n};\n\nexport default (session: Session, options: Options) => {\n  const { baseUrl, maxCalls, delayBetweenCalls, maxCodeLength } = {\n    baseUrl: 'http://127.0.0.1:16732',\n    maxCalls: 7,\n    delayBetweenCalls: 2000,\n    ...options,\n  };\n\n  console.log(\n    `%c[ATOL] @bedunkevich/atol version: ${pkg.version}`,\n    'color:green',\n    { session },\n    { baseUrl, maxCalls, delayBetweenCalls, maxCodeLength },\n  );\n\n  const API = axios.create({\n    baseURL: baseUrl,\n    timeout: 20000,\n  });\n\n  const { operator, taxationType } = session;\n\n  validateData(SessionSchema, session);\n\n  const post = <T = unknown>(\n    uuid: string,\n    request: T,\n  ): Promise<AxiosPromise<TaskResponce>> => {\n    return API.post('/api/v2/requests', { uuid, request });\n  };\n\n  const get = (uuid: string): AxiosPromise<TaskResultResponce> => {\n    return API.get(`/api/v2/requests/${uuid}`);\n  };\n\n  /*\n   * Открытие смены\n   */\n  const openShift = async (): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    console.log(`%c[ATOL] [openShift] ${uuid}`, 'color:green');\n    try {\n      const responce = await post(uuid, [\n        {\n          type: RequestTypes[RequestTypes.openShift],\n          operator,\n        },\n      ]);\n      console.log(`%c[ATOL] [openShift] SUCCESS`, 'color:green', responce.data);\n      return responce;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.log(\n          `%c[ATOL] [openShift] FAIL`,\n          'color:red',\n          error.response?.data,\n        );\n      }\n      return error as any;\n    }\n  };\n\n  /*\n   * Закрытие смены\n   */\n  const closeShift = (): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.closeShift],\n        operator,\n      },\n    ]);\n  };\n\n  /*\n   * X-отчет\n   */\n  const reportX = (): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.reportX],\n        operator,\n      },\n    ]);\n  };\n\n  /*\n   * Внесение наличных\n   */\n  const cashIn = (cashSum: number): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.cashIn],\n        operator,\n        cashSum,\n      },\n    ]);\n  };\n\n  /*\n   * Выплата наличных\n   */\n  const cashOut = (cashSum: number): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.cashOut],\n        operator,\n        cashSum,\n      },\n    ]);\n  };\n\n  /*\n   * Чек прихода – продажа\n   */\n  const sell = (\n    data: Sell,\n    type: RequestTypes = RequestTypes.sell,\n  ): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n\n    validateData(SellSchema, data);\n\n    const task = {\n      type: RequestTypes[type],\n      taxationType,\n      operator,\n      ...data,\n    };\n    console.log(`%c[ATOL] [SELL] ${type}`, 'color:green', task);\n\n    return post<SellRequest[]>(uuid, [task]);\n  };\n\n  /*\n   * Проверка статуса задания\n   */\n  const checkStatus = async (\n    uuid: string,\n    callIndex = 0,\n  ): Promise<TaskResultStatus> => {\n    try {\n      const {\n        data: { results },\n      } = await get(uuid);\n      const status = results?.[0]?.status;\n      console.log('%c[ATOL] [checkStatus]', 'color:green', results);\n\n      if (callIndex >= maxCalls) {\n        throw new Error('MAX_CALLS LIMIT!');\n      }\n\n      if (status !== TaskResultStatus['ready']) {\n        await delay(delayBetweenCalls);\n        return checkStatus(uuid, callIndex + 1);\n      }\n      return status;\n    } catch (error: any) {\n      console.log('%c[ATOL] [checkStatus]', 'color:red', error.message);\n\n      if (callIndex >= maxCalls) {\n        throw new Error('MAX_CALLS LIMIT!');\n      }\n\n      await delay(delayBetweenCalls);\n      return checkStatus(uuid, callIndex + 1);\n    }\n  };\n\n  const executeTask = async (fn: any, cb: LegacyCallback) => {\n    if (typeof cb !== 'function') {\n      throw new Error('CALLBACK should be a function!');\n    }\n    try {\n      const {\n        data: { uuid },\n      } = await fn();\n      if (!uuid) {\n        throw new Error('UUID cant be null | undefined!');\n      }\n      const status = await checkStatus(uuid);\n      console.log('%c[ATOL] [executeTask]', 'color:green', { uuid, status });\n      return cb(true, { code: 0, res: 'ok' });\n    } catch (error: any) {\n      console.log(error);\n      const {\n        error: { code, description },\n      } = error.response.data;\n      return cb(false, { code, res: description });\n    }\n  };\n\n  // Легаси\n  const fprint = {\n    report: async function (cb: LegacyCallback) {\n      await executeTask(() => reportX(), cb);\n    },\n    sell: async function (data: any, cb: LegacyCallback) {\n      console.log('%c[ATOL] [LEGACY]', 'color:green', data);\n      await executeTask(\n        () => sell(legacyMapSell(data, maxCodeLength) as any),\n        cb,\n      );\n    },\n    ret: async function (data: any, cb: LegacyCallback) {\n      await executeTask(\n        () =>\n          sell(\n            legacyMapSell(data, maxCodeLength) as any,\n            RequestTypes.sellReturn,\n          ),\n        cb,\n      );\n    },\n    open_session: async function (cb: LegacyCallback) {\n      await executeTask(() => openShift(), cb);\n    },\n    close_session: async function (cb: LegacyCallback) {\n      await executeTask(() => closeShift(), cb);\n    },\n    cash_income: async function (\n      data: { income: boolean; summ: number },\n      cb: LegacyCallback,\n    ) {\n      const fn = data.income\n        ? () => cashIn(data.summ)\n        : () => cashOut(data.summ);\n      await executeTask(fn, cb);\n    },\n  };\n\n  return {\n    openShift,\n    closeShift,\n    cashIn,\n    cashOut,\n    sell,\n    reportX,\n    checkStatus,\n    fprint,\n  };\n};\n","import API from './api';\nimport type { Session, Options } from './types';\n\nexport const init = ({\n  session,\n  options,\n}: {\n  session: Session;\n  options?: Options;\n}) => API(session, options);\n"],"names":["rnds8Pool","Uint8Array","poolPtr","length","rng","crypto","getRandomValues","slice","REGEX","_nodeId","_clockseq","byteToHex","i","push","toString","substr","stringify","arr","offset","uuid","toLowerCase","test","validate","TypeError","_lastMSecs","_lastNSecs","v1","options","buf","b","Array","node","clockseq","undefined","seedBytes","random","msecs","Date","now","nsecs","dt","Error","tl","tmh","n","TaskResultStatus","RequestTypes","delay","time","Promise","resolve","setTimeout","ajv","legacyMapSell","data","maxCodeLength","payments","calcDiscountAmmount","item","discount_multiplier","currency","discount","divide","total_cost","cost","multiply","quantity","result","console","log","value","error","cash","type","sum","card","items","products","map","__assign","name","price","amount","total","infoDiscountAmount","tax","description","markingCode","mark","btoa","unescape","window","ajv7","Ajv","default","allErrors","removeAdditional","useDefaults","validateData","schema","compile","errorsText","errors","_a","session","baseUrl","maxCalls","delayBetweenCalls","concat","pkg","API","axios","create","baseURL","timeout","operator","taxationType","SessionSchema","post","request","get","openShift","__awaiter","buildUUID","responce","_b","sent","isAxiosError","error_1","response","closeShift","reportX","cashIn","cashSum","cashOut","sell","SellSchema","task","checkStatus","callIndex","results","status_1","status","error_2","message","executeTask","fn","cb","status_2","code","res","error_3","fprint","report","ret","sellReturn","open_session","close_session","cash_income","income","summ"],"mappings":";;;;;kjIAAMA,EAAY,IAAIC,WAAW,KAC7BC,EAAUF,EAAUG,OAEV,SAAUC,IAKtB,OAJIF,EAAUF,EAAUG,OAAS,KAC/BE,OAAOC,gBAAgBN,GACvBE,EAAU,GAELF,EAAUO,MAAML,EAAUA,GAAW,GAC9C,CCTA,IAAAM,EAAe,sHCQf,IAFA,ICEIC,EACAC,EDHEC,EAAiB,GAEdC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,OAAO,IAGjD,SAASC,EAAUC,EAAUC,QAAA,IAAAA,IAAAA,EAAU,GAGrC,IAAMC,GACJR,EAAUM,EAAIC,EAAS,IACvBP,EAAUM,EAAIC,EAAS,IACvBP,EAAUM,EAAIC,EAAS,IACvBP,EAAUM,EAAIC,EAAS,IACvB,IACAP,EAAUM,EAAIC,EAAS,IACvBP,EAAUM,EAAIC,EAAS,IACvB,IACAP,EAAUM,EAAIC,EAAS,IACvBP,EAAUM,EAAIC,EAAS,IACvB,IACAP,EAAUM,EAAIC,EAAS,IACvBP,EAAUM,EAAIC,EAAS,IACvB,IACAP,EAAUM,EAAIC,EAAS,KACvBP,EAAUM,EAAIC,EAAS,KACvBP,EAAUM,EAAIC,EAAS,KACvBP,EAAUM,EAAIC,EAAS,KACvBP,EAAUM,EAAIC,EAAS,KACvBP,EAAUM,EAAIC,EAAS,MACvBE,cAOF,IEzCF,SAAkBD,GAChB,MAAuB,iBAATA,GAAqBX,EAAMa,KAAKF,EAChD,CFuCOG,CAASH,GACZ,MAAMI,UAAU,+BAGlB,OAAOJ,CACT,CCpCA,IAAIK,EAAa,EACbC,EAAa,EAGjB,SAASC,EAAGC,EAAeC,EAAWV,GACpC,IAAIN,EAAKgB,GAAOV,GAAW,EACrBW,EAAID,GAAO,IAAIE,MAAM,IAGvBC,GADJJ,EAAUA,GAAW,IACFI,MAAQtB,EACvBuB,OAAgCC,IAArBN,EAAQK,SAAyBL,EAAQK,SAAWtB,EAKnE,GAAY,MAARqB,GAA4B,MAAZC,EAAkB,CACpC,IAAME,EAAYP,EAAQQ,SAAWR,EAAQvB,KAAOA,KAExC,MAAR2B,IAEFA,EAAOtB,EAAU,CACA,EAAfyB,EAAU,GACVA,EAAU,GACVA,EAAU,GACVA,EAAU,GACVA,EAAU,GACVA,EAAU,KAIE,MAAZF,IAEFA,EAAWtB,EAAmD,OAArCwB,EAAU,IAAM,EAAKA,EAAU,IAE3D,CAMD,IAAIE,OAA0BH,IAAlBN,EAAQS,MAAsBT,EAAQS,MAAQC,KAAKC,MAI3DC,OAA0BN,IAAlBN,EAAQY,MAAsBZ,EAAQY,MAAQd,EAAa,EAGjEe,EAAKJ,EAAQZ,GAAce,EAAQd,GAAc,IAcvD,GAXIe,EAAK,QAA0BP,IAArBN,EAAQK,WACpBA,EAAYA,EAAW,EAAK,QAKzBQ,EAAK,GAAKJ,EAAQZ,SAAiCS,IAAlBN,EAAQY,QAC5CA,EAAQ,GAINA,GAAS,IACX,MAAM,IAAIE,MAAM,mDAGlBjB,EAAaY,EACbX,EAAac,EACb7B,EAAYsB,EAMZ,IAAMU,GAA4B,KAAb,WAHrBN,GAAS,cAGiCG,GAAS,WACnDV,EAAEjB,KAAQ8B,IAAO,GAAM,IACvBb,EAAEjB,KAAQ8B,IAAO,GAAM,IACvBb,EAAEjB,KAAQ8B,IAAO,EAAK,IACtBb,EAAEjB,KAAY,IAAL8B,EAGT,IAAMC,EAAQP,EAAQ,WAAe,IAAS,UAC9CP,EAAEjB,KAAQ+B,IAAQ,EAAK,IACvBd,EAAEjB,KAAa,IAAN+B,EAGTd,EAAEjB,KAAS+B,IAAQ,GAAM,GAAO,GAChCd,EAAEjB,KAAQ+B,IAAQ,GAAM,IAGxBd,EAAEjB,KAAQoB,IAAa,EAAK,IAG5BH,EAAEjB,KAAkB,IAAXoB,EAGT,IAAK,IAAIY,EAAI,EAAGA,EAAI,IAAKA,EACvBf,EAAEjB,EAAIgC,GAAKb,EAAKa,GAGlB,OAAOhB,GAAOZ,EAAUa,EAC1B,CEhHO,IC8BKgB,EAUAC,EDxCCC,EAAQ,SAACC,GACpB,OAAA,IAAIC,SAAQ,SAACC,GAAY,OAAAC,WAAWD,EAASF,EAAK,GAAlD,GC6BF,SAAYH,GACVA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAA,KAAA,OACAA,EAAA,WAAA,aACAA,EAAA,YAAA,cACAA,EAAA,QAAA,UACAA,EAAA,SAAA,UACD,CARD,CAAYA,IAAAA,EAQX,CAAA,IAED,SAAYC,GACVA,EAAA,UAAA,YACAA,EAAA,WAAA,aACAA,EAAA,OAAA,SACAA,EAAA,QAAA,UACAA,EAAA,KAAA,OACAA,EAAA,WAAA,aACAA,EAAA,IAAA,MACAA,EAAA,UAAA,YACAA,EAAA,QAAA,SACD,CAVD,CAAYA,IAAAA,EAUX,CAAA,IC5CM,ICaHM,EDbSC,EAAgB,SAC3BC,EACAC,GAEA,IAAMC,EAAsB,GAgB5B,SAASC,EAAoBC,GAC3B,IACE,IAAMC,EAAsBC,EAAAA,QAASF,EAAKG,UAAUC,OAAO,KACrDC,EAAaH,EAAQ,QAACF,EAAKM,MAAMC,SAASP,EAAKQ,UAC/CC,EAASP,EAAAA,QAASG,GAAYE,SAASN,GAU7C,OARAS,QAAQC,IACN,aACAN,EAAWO,MACX,sBACAX,EAAoBW,MACpB,SACAH,EAAOG,OAEFH,EAAOG,KACf,CAAC,MAAOC,GAEP,YADAH,QAAQC,IAAI,wBAAyBE,EAEtC,CACF,CAED,YAnC2BtC,IAAvBqB,EAAKE,SAASgB,MAChBhB,EAAS3C,KAAK,CACZ4D,KAAM,IACNC,IAAKpB,EAAKE,SAASgB,YAIIvC,IAAvBqB,EAAKE,SAASmB,MAChBnB,EAAS3C,KAAK,CACZ4D,KAAM,IACNC,IAAKpB,EAAKE,SAASmB,OAyBhB,CACLC,MAAOtB,EAAKuB,SAASC,KACnB,SAACpB,GAAe,OACdqB,EAAA,CAAAN,KAAM,WACNO,KAAMtB,EAAKsB,KACXC,MAAOvB,EAAKM,KACZE,SAAUR,EAAKQ,SACfgB,OAAQxB,EAAKyB,MACbC,mBAAoB3B,EAAoBC,GACxC2B,IAAK,CAAEZ,KAAM,SACTf,EAAK4B,YACL,CACEC,YAAa,CACXd,KAAM,QACNe,KAAMC,KACJlC,EACImC,SAAShC,EAAK4B,aAAa/E,MAAM,EAAGgD,GACpCmC,SAAShC,EAAK4B,qBAIxBrD,EACJ,IAEJuB,SAAQA,EAEZ,ECpDA,GAAImC,OAAOC,KAAM,CACf,IAAMC,EAAMF,OAAOC,KAAKE,QAExB1C,EAAM,IAAIyC,EAAI,CACZE,WAAW,EACXC,kBAAkB,EAClBC,aAAa,GAEhB,CAED,IAAMC,EAAe,SAACC,EAAa7C,GACjC,GAAIqC,OAAOC,KAAM,CACf,IAAMtE,EAAW8B,EAAIgD,QAAQD,GAE7B,IAAK7E,EAASgC,GAMZ,MALAc,QAAQC,IACN,wBACA,YACAjB,EAAIiD,WAAW/E,EAASgF,SAEpB,IAAI7D,MAAMW,EAAIiD,WAAW/E,EAASgF,QAE3C,CACH,SCzCoB,SAACC,GAMf,ODqCS,SAACC,EAAkB7E,GAC1B,IAAA4E,EAAAxB,EAAA,CACJ0B,QAAS,yBACTC,SAAU,EACVC,kBAAmB,KAChBhF,GAJG8E,EAAOF,EAAAE,QAAEC,EAAQH,EAAAG,SAAEC,EAAiBJ,EAAAI,kBAAEpD,EAAagD,EAAAhD,cAO3Da,QAAQC,IACN,uCAAAuC,OAAuCC,GACvC,cACA,CAAEL,QAAOA,GACT,CAAEC,QAAOA,EAAEC,SAAQA,EAAEC,kBAAiBA,EAAEpD,cAAaA,IAGvD,IAAMuD,EAAMC,EAAK,QAACC,OAAO,CACvBC,QAASR,EACTS,QAAS,MAGHC,EAA2BX,EAAOW,SAAxBC,EAAiBZ,EAAOY,aAE1ClB,EAAamB,EAAeb,GAE5B,IAAMc,EAAO,SACXnG,EACAoG,GAEA,OAAOT,EAAIQ,KAAK,mBAAoB,CAAEnG,KAAIA,EAAEoG,QAAOA,GACrD,EAEMC,EAAM,SAACrG,GACX,OAAO2F,EAAIU,IAAI,2BAAoBrG,GACrC,EAKMsG,EAAY,WAAA,OAAAC,OAAA,OAAA,OAAA,GAAA,yEACVvG,EAAOwG,IACbvD,QAAQC,IAAI,wBAAAuC,OAAwBzF,GAAQ,gCAEzB,6BAAM,CAAA,EAAAmG,EAAKnG,EAAM,CAChC,CACEsD,KAAM3B,EAAaA,EAAa2E,WAChCN,SAAQA,aAIZ,OAPMS,EAAWC,EAKfC,OACF1D,QAAQC,IAAI,+BAAgC,cAAeuD,EAAStE,MACpE,CAAA,EAAOsE,UASP,kBAPIb,EAAK,QAACgB,aAAaC,IACrB5D,QAAQC,IACN,4BACA,YACgB,QAAhBkC,EAAAyB,EAAMC,gBAAU,IAAA1B,OAAA,EAAAA,EAAAjD,MAGpB,CAAA,EAAO0E,4BAOLE,EAAa,WACjB,IAAM/G,EAAOwG,IACb,OAAOL,EAAKnG,EAAM,CAChB,CACEsD,KAAM3B,EAAaA,EAAaoF,YAChCf,SAAQA,IAGd,EAKMgB,EAAU,WACd,IAAMhH,EAAOwG,IACb,OAAOL,EAAKnG,EAAM,CAChB,CACEsD,KAAM3B,EAAaA,EAAaqF,SAChChB,SAAQA,IAGd,EAKMiB,EAAS,SAACC,GACd,IAAMlH,EAAOwG,IACb,OAAOL,EAAKnG,EAAM,CAChB,CACEsD,KAAM3B,EAAaA,EAAasF,QAChCjB,SAAQA,EACRkB,QAAOA,IAGb,EAKMC,EAAU,SAACD,GACf,IAAMlH,EAAOwG,IACb,OAAOL,EAAKnG,EAAM,CAChB,CACEsD,KAAM3B,EAAaA,EAAawF,SAChCnB,SAAQA,EACRkB,QAAOA,IAGb,EAKME,EAAO,SACXjF,EACAmB,QAAA,IAAAA,IAAAA,EAAqB3B,EAAayF,MAElC,IAAMpH,EAAOwG,IAEbzB,EAAasC,EAAYlF,GAEzB,IAAMmF,EACJ1D,EAAA,CAAAN,KAAM3B,EAAa2B,GACnB2C,eACAD,YACG7D,GAIL,OAFAc,QAAQC,IAAI,mBAAmBuC,OAAAnC,GAAQ,cAAegE,GAE/CnB,EAAoBnG,EAAM,CAACsH,GACpC,EAKMC,EAAc,SAClBvH,EACAwH,eAAA,IAAAA,IAAAA,EAAa,oGAKP,6BAAA,CAAA,EAAMnB,EAAIrG,WAId,GALUyH,EACNf,EAAeC,OADFxE,KAAAsF,QAEXC,EAAuB,QAAdtC,EAAAqC,aAAO,EAAPA,EAAU,UAAI,IAAArC,OAAA,EAAAA,EAAAuC,OAC7B1E,QAAQC,IAAI,yBAA0B,cAAeuE,GAEjDD,GAAajC,EACf,MAAM,IAAIjE,MAAM,2BAGdoG,IAAWhG,EAAwB,MAAC,CAAA,EAAA,GACtC,CAAA,EAAME,EAAM4D,kBAYd,OADAkB,EAAAC,OACO,CAAA,EAAAY,EAAYvH,EAAMwH,EAAY,IATrC,KAAA,EAAA,MAAA,CAAA,EAAOE,UAIP,cAFAzE,QAAQC,IAAI,yBAA0B,YAAa0E,EAAMC,SAErDL,GAAajC,EACf,MAAM,IAAIjE,MAAM,oBAGlB,MAAA,CAAA,EAAMM,EAAM4D,6BAKVsC,EAAc,SAAOC,EAASC,GAAkB,OAAAzB,OAAA,OAAA,OAAA,GAAA,6EACpD,GAAkB,mBAAPyB,EACT,MAAM,IAAI1G,MAAM,mDAKZ,6BAAM,CAAA,EAAAyG,YACV,KAFU/H,EACN0G,EAAUC,OADAxE,KAAAnC,MAGZ,MAAM,IAAIsB,MAAM,kCAEH,MAAA,CAAA,EAAMiG,EAAYvH,WAEjC,OAFMiI,EAASvB,EAAuBC,OACtC1D,QAAQC,IAAI,yBAA0B,cAAe,CAAElD,OAAM2H,OAAMM,IACnE,CAAA,EAAOD,GAAG,EAAM,CAAEE,KAAM,EAAGC,IAAK,eAMhC,kBAJAlF,QAAQC,IAAIkF,GAEVhD,EACEgD,EAAMtB,SAAS3E,KAAIiB,MADZ8E,EAAI9C,EAAA8C,KAAE/D,EAAWiB,EAAAjB,YAE5B,CAAA,EAAO6D,GAAG,EAAO,CAAEE,KAAIA,EAAEC,IAAKhE,8BAK5BkE,EAAS,CACbC,OAAQ,SAAgBN,6FACtB,MAAM,CAAA,EAAAF,GAAY,WAAM,OAAAd,GAAS,GAAEgB,kBAAnC5C,EAAAuB,iBACD,EACDS,KAAM,SAAgBjF,EAAW6F,6FAE/B,OADA/E,QAAQC,IAAI,oBAAqB,cAAef,GAChD,CAAA,EAAM2F,GACJ,WAAM,OAAAV,EAAKlF,EAAcC,EAAMC,MAC/B4F,kBAFF5C,EAAAuB,iBAID,EACD4B,IAAK,SAAgBpG,EAAW6F,sFAC9B,KAAA,EAAA,MAAA,CAAA,EAAMF,GACJ,WACE,OAAAV,EACElF,EAAcC,EAAMC,GACpBT,EAAa6G,cAEjBR,kBANF5C,EAAAuB,iBAQD,EACD8B,aAAc,SAAgBT,6FAC5B,MAAM,CAAA,EAAAF,GAAY,WAAM,OAAAxB,GAAW,GAAE0B,kBAArC5C,EAAAuB,iBACD,EACD+B,cAAe,SAAgBV,6FAC7B,MAAM,CAAA,EAAAF,GAAY,WAAM,OAAAf,GAAY,GAAEiB,kBAAtC5C,EAAAuB,iBACD,EACDgC,YAAa,SACXxG,EACA6F,mGAKA,OAHMD,EAAK5F,EAAKyG,OACZ,WAAM,OAAA3B,EAAO9E,EAAK0G,KAAK,EACvB,WAAM,OAAA1B,EAAQhF,EAAK0G,KAAb,EACV,CAAA,EAAMf,EAAYC,EAAIC,kBAAtB5C,EAAAuB,iBACD,GAGH,MAAO,CACLL,UAASA,EACTS,WAAUA,EACVE,OAAMA,EACNE,QAAOA,EACPC,KAAIA,EACJJ,QAAOA,EACPO,YAAWA,EACXc,OAAMA,EAET,CC1RK1C,CALGP,EAAAC,QACAD,EAAA5E,QAIH"}