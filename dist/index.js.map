{"version":3,"file":"index.js","sources":["../src/uuid/rng.ts","../src/uuid/regex.ts","../src/uuid/validate.ts","../src/uuid/stringify.ts","../src/uuid/index.ts","../src/helpers.ts","../src/types.ts","../src/mapping.ts","../src/api.ts","../src/index.ts"],"sourcesContent":["const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\n\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.getRandomValues(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n","import REGEX from './regex';\n\nfunction validate(uuid: string): boolean {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;\n","import validate from './validate';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex: any = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr: any, offset = 0): string {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (\n    byteToHex[arr[offset + 0]] +\n    byteToHex[arr[offset + 1]] +\n    byteToHex[arr[offset + 2]] +\n    byteToHex[arr[offset + 3]] +\n    '-' +\n    byteToHex[arr[offset + 4]] +\n    byteToHex[arr[offset + 5]] +\n    '-' +\n    byteToHex[arr[offset + 6]] +\n    byteToHex[arr[offset + 7]] +\n    '-' +\n    byteToHex[arr[offset + 8]] +\n    byteToHex[arr[offset + 9]] +\n    '-' +\n    byteToHex[arr[offset + 10]] +\n    byteToHex[arr[offset + 11]] +\n    byteToHex[arr[offset + 12]] +\n    byteToHex[arr[offset + 13]] +\n    byteToHex[arr[offset + 14]] +\n    byteToHex[arr[offset + 15]]\n  ).toLowerCase();\n\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;\n","import rng from './rng';\nimport stringify from './stringify';\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId: unknown;\nlet _clockseq: unknown;\n\n// Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options?: any, buf?: any, offset?: any) {\n  let i = (buf && offset) || 0;\n  const b = buf || new Array(16);\n\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1],\n        seedBytes[2],\n        seedBytes[3],\n        seedBytes[4],\n        seedBytes[5],\n      ];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = ((seedBytes[6] << 8) | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = (clockseq + 1) & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = (tl >>> 24) & 0xff;\n  b[i++] = (tl >>> 16) & 0xff;\n  b[i++] = (tl >>> 8) & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  const tmh = ((msecs / 0x100000000) * 10000) & 0xfffffff;\n  b[i++] = (tmh >>> 8) & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = ((tmh >>> 24) & 0xf) | 0x10; // include version\n  b[i++] = (tmh >>> 16) & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = (clockseq >>> 8) | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport { v1 };\n","export const delay = (time: number): Promise<void> =>\n  new Promise((resolve) => setTimeout(resolve, time));\n","import type { AxiosPromise } from 'axios';\n\ndeclare global {\n  interface Window {\n    ajv7: {\n      default: any;\n    };\n  }\n}\n\nexport type Options =\n  | Partial<{\n      baseUrl: string;\n      maxCalls: number;\n      delayBetweenCalls: number;\n    }>\n  | undefined;\n\nexport type TaskResponce = Partial<{\n  uuid: string;\n  number: number;\n  isBlocked: boolean;\n  blockedUUID: string;\n  error: {\n    code: number;\n    description: string;\n  };\n}>;\n\nexport enum TaskResultStatus {\n  ready = 'ready',\n  error = 'error',\n  wait = 'wait',\n  inProgress = 'inProgress',\n  interrupted = 'interrupted',\n  blocked = 'blocked',\n  canceled = 'canceled',\n}\n\nexport enum RequestTypes {\n  openShift = 'openShift',\n  closeShift = 'closeShift',\n  cashIn = 'cashIn',\n  cashOut = 'cashOut',\n  sell = 'sell',\n  sellReturn = 'sellReturn',\n  buy = 'buy',\n  buyReturn = 'buyReturn',\n  reportX = 'reportX',\n}\n\nexport type TaxationType =\n  | 'osn' // общая\n  | 'usnIncome' // упрощенная (Доход)\n  | 'usnIncomeOutcome' // упрощенная (Доход минус Расход)\n  | 'envd' // единый налог на вмененный доход\n  | 'esn' // единый сельскохозяйственный налог\n  | 'patent'; // патентная система налогообложения\n\nexport type TaskResultResponce = {\n  results: {\n    error: {\n      code: number;\n      description: string;\n    };\n    status: TaskResultStatus;\n  }[];\n};\n\nexport type Session = {\n  taxationType: TaxationType;\n  operator: {\n    name: string;\n    vatin?: string; // ИНН оператора\n  };\n};\n\nexport type PositionTax =\n  | 'none' // без НДС\n  | 'vat0' // НДС 0%\n  | 'vat10' // НДС 10%\n  | 'vat110' // НДС 10/110\n  | 'vat18' // НДС 18%\n  | 'vat118' // НДС 18/118%\n  | 'vat20' // НДС 20%\n  | 'vat120'; // НДС 20/120%\n\nexport type Item = {\n  type: 'position';\n  name: string; // Наименование\n  price: number; // Цена за единицу товара\n  quantity: number; // Количество товара\n  amount: number; // Сумма позиции\n  infoDiscountSum?: number; // Информационная скидка. Не влияет на сумму позиции, остальные параметры должны передаваться с учетом её.\n  tax: {\n    type: PositionTax;\n    sum?: number; // Сумма налога\n  };\n  paymentMethod?:\n    | 'fullPrepayment' // По умолчанию: предоплата 100%\n    | 'prepayment' // предоплата\n    | 'advance' // аванс\n    | 'fullPayment' // полный расчет\n    | 'partialPayment' // частичный расчет и кредит\n    | 'credit' // передача в кредит\n    | 'creditPayment'; // оплата кредита\n  paymentObject?: 'commodity' | 'excise' | 'job' | 'service'; // По умолчанию: commodity\n  department?: number; // Отдел / секция. По умолчанию: 1\n  markingCode: {\n    type?: 'other' | 'egais20' | 'egais30'; // Тип марки. По умолчанию: other\n    mark: string; // base64-представление кода маркировки\n  };\n};\n\nexport type Payment = {\n  type:\n    | 'cash' // наличными\n    | '0'\n    | 'electronicaly' // безналичными\n    | '1'\n    | 'prepaid' // предварительная оплата (аванс)\n    | '2'\n    | 'credir' // последующая оплата (кредит)\n    | '3'\n    | 'other' // иная форма оплаты (встречное предоставление)\n    | '4'\n    | string;\n  sum: number;\n};\n\nexport type MinimumArray<T> = [T, ...T[]];\n\nexport type Sell = {\n  items: MinimumArray<Item>;\n  payments: MinimumArray<Payment>;\n  total?: number; // Итог чека. Может отличаться от суммы позиций на значение,\n  // равное копейкам чека. Если не задан - высчитывается автоматически из суммы всех позиций\n};\n\nexport type SellRequest = { type: RequestTypes } & Session & Sell;\n\nexport type LegacyCallback = (success: boolean, data: any) => void;\n\nexport type AtolDriverInterface = {\n  openShift: () => Promise<AxiosPromise<TaskResponce>>;\n  closeShift: () => Promise<AxiosPromise<TaskResponce>>;\n  cashIn: (sum: number) => Promise<AxiosPromise<TaskResponce>>;\n  cashOut: (sum: number) => Promise<AxiosPromise<TaskResponce>>;\n  sell: (data: Sell) => Promise<AxiosPromise<TaskResponce>>;\n  reportX: () => Promise<AxiosPromise<TaskResponce>>;\n  checkStatus: (uuid: string, callIndex?: number) => Promise<TaskResultStatus>;\n  fprint: any;\n};\n","import type sellMock from './mocks/sell.json';\nimport type { Item, Payment } from './types';\n\ntype LegacySell = typeof sellMock;\n\nexport const legacyMapSell = (\n  data: LegacySell,\n): { items: Item[]; payments: Payment[] } => {\n  const payments: Payment[] = [];\n\n  if (data.payments.cash) {\n    payments.push({\n      type: 'cash',\n      sum: data.payments.cash,\n    });\n  }\n\n  if (data.payments.card) {\n    payments.push({\n      type: 'electronicaly',\n      sum: data.payments.card,\n    });\n  }\n\n  return {\n    items: data.products.map(\n      (item): Item => ({\n        type: 'position',\n        name: item.name,\n        price: item.cost,\n        quantity: item.quantity,\n        amount: item.total,\n        tax: { type: 'none' },\n        markingCode: {\n          mark: btoa(item.description),\n        },\n      }),\n    ),\n    payments,\n  };\n};\n","import axios, { AxiosPromise } from 'axios';\nimport pkg from '../package.json';\nimport SessionSchema from './validation/Session.json';\nimport SellSchema from './validation/Sell.json';\nimport { v1 as buildUUID } from './uuid';\nimport { delay } from './helpers';\nimport {\n  Session,\n  Options,\n  TaskResponce,\n  TaskResultResponce,\n  TaskResultStatus,\n  RequestTypes,\n  AtolDriverInterface,\n  Sell,\n  SellRequest,\n  LegacyCallback,\n} from './types';\nimport { legacyMapSell } from './mapping';\n\nlet ajv: any;\n\nif (window.ajv7) {\n  const Ajv = window.ajv7.default;\n\n  ajv = new Ajv({\n    allErrors: true,\n    removeAdditional: true,\n    useDefaults: true,\n  });\n}\n\nconst validateData = (schema: any, data: any) => {\n  if (window.ajv7) {\n    const validate = ajv.compile(schema);\n\n    if (!validate(data)) {\n      console.log(\n        '%c[ATOL] [validation]',\n        'color:red',\n        ajv.errorsText(validate.errors),\n      );\n      throw new Error(ajv.errorsText(validate.errors));\n    }\n  }\n};\n\nexport default (session: Session, options: Options): AtolDriverInterface => {\n  const { baseUrl, maxCalls, delayBetweenCalls } = {\n    baseUrl: 'http://127.0.0.1:16732',\n    maxCalls: 7,\n    delayBetweenCalls: 2000,\n    ...options,\n  };\n\n  console.log(\n    `%c[ATOL] @bedunkevich/atol version: ${pkg.version}`,\n    'color:green',\n  );\n\n  const API = axios.create({\n    baseURL: baseUrl,\n    timeout: 1000,\n  });\n\n  const { operator, taxationType } = session;\n\n  validateData(SessionSchema, session);\n\n  const post = <T = unknown>(\n    uuid: string,\n    request: T,\n  ): Promise<AxiosPromise<TaskResponce>> => {\n    return API.post('/api/v2/requests', { uuid, request });\n  };\n\n  const get = (uuid: string): AxiosPromise<TaskResultResponce> => {\n    return API.get(`/api/v2/requests/${uuid}`);\n  };\n\n  /*\n   * Открытие смены\n   */\n  const openShift = async (): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    console.log(`%c[ATOL] [openShift] ${uuid}`, 'color:green');\n    try {\n      const responce = await post(uuid, [\n        {\n          type: RequestTypes[RequestTypes.openShift],\n          operator,\n        },\n      ]);\n      console.log(`%c[ATOL] [openShift] SUCCESS`, 'color:green', responce.data);\n      return responce;\n    } catch (error) {\n      console.log(\n        `%c[ATOL] [openShift] FAIL`,\n        'color:red',\n        error.response.data,\n      );\n      return error;\n    }\n  };\n\n  /*\n   * Закрытие смены\n   */\n  const closeShift = (): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.closeShift],\n        operator,\n      },\n    ]);\n  };\n\n  /*\n   * X-отчет\n   */\n  const reportX = (): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.reportX],\n        operator,\n      },\n    ]);\n  };\n\n  /*\n   * Внесение наличных\n   */\n  const cashIn = (cashSum: number): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.cashIn],\n        operator,\n        cashSum,\n      },\n    ]);\n  };\n\n  /*\n   * Выплата наличных\n   */\n  const cashOut = (cashSum: number): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.cashOut],\n        operator,\n        cashSum,\n      },\n    ]);\n  };\n\n  /*\n   * Чек прихода – продажа\n   */\n  const sell = (\n    data: Sell,\n    type: RequestTypes = RequestTypes.sell,\n  ): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n\n    console.log(`%c[ATOL] [SELL] ${type}`, 'color:green', data);\n\n    validateData(SellSchema, data);\n\n    return post<SellRequest[]>(uuid, [\n      {\n        type: RequestTypes[type],\n        taxationType,\n        operator,\n        ...data,\n      },\n    ]);\n  };\n\n  /*\n   * Проверка статуса задания\n   */\n  const checkStatus = async (\n    uuid: string,\n    callIndex = 0,\n  ): Promise<TaskResultStatus> => {\n    try {\n      const {\n        data: { results },\n      } = await get(uuid);\n      const status = results?.[0]?.status;\n      console.log('%c[ATOL] [checkStatus]', 'color:green', results);\n\n      if (callIndex >= maxCalls) {\n        throw new Error('MAX_CALLS LIMIT!');\n      }\n\n      if (status !== TaskResultStatus['ready']) {\n        await delay(delayBetweenCalls);\n        return checkStatus(uuid, callIndex + 1);\n      }\n      return status;\n    } catch (error) {\n      console.log('%c[ATOL] [checkStatus]', 'color:red', error.message);\n\n      if (callIndex >= maxCalls) {\n        throw new Error('MAX_CALLS LIMIT!');\n      }\n\n      await delay(delayBetweenCalls);\n      return checkStatus(uuid, callIndex + 1);\n    }\n  };\n\n  const executeTask = async (fn: any, cb: LegacyCallback) => {\n    if (typeof cb !== 'function') {\n      throw new Error('CALLBACK should be a function!');\n    }\n    try {\n      const {\n        data: { uuid },\n      } = await fn();\n      if (!uuid) {\n        throw new Error('UUID cant be null | undefined!');\n      }\n      const status = await checkStatus(uuid);\n      console.log('%c[ATOL] [executeTask]', 'color:green', { uuid, status });\n      return cb(true, { code: 0, res: 'ok' });\n    } catch (error) {\n      const {\n        error: { code, description },\n      } = error.response.data;\n      return cb(false, { code, res: description });\n    }\n  };\n\n  // Легаси\n  const fprint = {\n    report: async function (cb: LegacyCallback) {\n      await executeTask(() => reportX(), cb);\n    },\n    sell: async function (data: any, cb: LegacyCallback) {\n      console.log('%c[ATOL] [LEGACY]', 'color:green', data);\n      await executeTask(() => sell(legacyMapSell(data) as any), cb);\n    },\n    ret: async function (data: any, cb: LegacyCallback) {\n      await executeTask(\n        () => sell(legacyMapSell(data) as any, RequestTypes.sellReturn),\n        cb,\n      );\n    },\n    open_session: async function (cb: LegacyCallback) {\n      await executeTask(() => openShift(), cb);\n    },\n    close_session: async function (cb: LegacyCallback) {\n      await executeTask(() => closeShift(), cb);\n    },\n    cash_income: async function (\n      data: { income: boolean; summ: number },\n      cb: LegacyCallback,\n    ) {\n      const fn = data.income\n        ? () => cashIn(data.summ)\n        : () => cashOut(data.summ);\n      await executeTask(fn, cb);\n    },\n  };\n\n  return {\n    openShift,\n    closeShift,\n    cashIn,\n    cashOut,\n    sell,\n    reportX,\n    checkStatus,\n    fprint,\n  };\n};\n","import API from './api';\nimport type { Session, Options, AtolDriverInterface } from './types';\n\nexport const init = ({\n  session,\n  options,\n}: {\n  session: Session;\n  options?: Options;\n}): AtolDriverInterface => API(session, options);\n"],"names":["axios","buildUUID"],"mappings":"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"}