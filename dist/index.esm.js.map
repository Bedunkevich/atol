{"version":3,"file":"index.esm.js","sources":["../src/uuid/rng.ts","../src/uuid/regex.ts","../src/uuid/validate.ts","../src/uuid/stringify.ts","../src/uuid/index.ts","../src/helpers.ts","../src/types.ts","../src/mapping.ts","../src/api.ts","../src/index.ts"],"sourcesContent":["const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\n\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.getRandomValues(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n","import REGEX from './regex';\n\nfunction validate(uuid: string): boolean {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;\n","import validate from './validate';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex: any = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr: any, offset = 0): string {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (\n    byteToHex[arr[offset + 0]] +\n    byteToHex[arr[offset + 1]] +\n    byteToHex[arr[offset + 2]] +\n    byteToHex[arr[offset + 3]] +\n    '-' +\n    byteToHex[arr[offset + 4]] +\n    byteToHex[arr[offset + 5]] +\n    '-' +\n    byteToHex[arr[offset + 6]] +\n    byteToHex[arr[offset + 7]] +\n    '-' +\n    byteToHex[arr[offset + 8]] +\n    byteToHex[arr[offset + 9]] +\n    '-' +\n    byteToHex[arr[offset + 10]] +\n    byteToHex[arr[offset + 11]] +\n    byteToHex[arr[offset + 12]] +\n    byteToHex[arr[offset + 13]] +\n    byteToHex[arr[offset + 14]] +\n    byteToHex[arr[offset + 15]]\n  ).toLowerCase();\n\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;\n","import rng from './rng';\nimport stringify from './stringify';\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId: unknown;\nlet _clockseq: unknown;\n\n// Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options?: any, buf?: any, offset?: any) {\n  let i = (buf && offset) || 0;\n  const b = buf || new Array(16);\n\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1],\n        seedBytes[2],\n        seedBytes[3],\n        seedBytes[4],\n        seedBytes[5],\n      ];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = ((seedBytes[6] << 8) | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = (clockseq + 1) & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = (tl >>> 24) & 0xff;\n  b[i++] = (tl >>> 16) & 0xff;\n  b[i++] = (tl >>> 8) & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  const tmh = ((msecs / 0x100000000) * 10000) & 0xfffffff;\n  b[i++] = (tmh >>> 8) & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = ((tmh >>> 24) & 0xf) | 0x10; // include version\n  b[i++] = (tmh >>> 16) & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = (clockseq >>> 8) | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport { v1 };\n","export const delay = (time: number): Promise<void> =>\n  new Promise((resolve) => setTimeout(resolve, time));\n\nconst FIRST_BLOCK_LENGTH = 31;\nconst SECOND_BLOCK_LENGTH = 6;\nconst FULL_CODE_LENGTH = 127;\n\nexport const getMarkingCode = (description?: string) => {\n  if (!description) {\n    return undefined;\n  }\n\n  try {\n    const SEPARATOR_SYMBOL = '\\u001D';\n    const mark = description\n      ? description.slice(0, FIRST_BLOCK_LENGTH) +\n        SEPARATOR_SYMBOL +\n        description.slice(\n          FIRST_BLOCK_LENGTH,\n          FIRST_BLOCK_LENGTH + SECOND_BLOCK_LENGTH,\n        ) +\n        SEPARATOR_SYMBOL +\n        description.slice(\n          FIRST_BLOCK_LENGTH + SECOND_BLOCK_LENGTH,\n          FULL_CODE_LENGTH,\n        )\n      : '';\n    console.log('mark', mark);\n    console.log('btoa mark', btoa(mark));\n    return {\n      type: 'other' as const,\n      mark: btoa(mark),\n    };\n  } catch (error) {\n    return undefined;\n  }\n};\n","import type { AxiosPromise } from 'axios';\n\ndeclare global {\n  interface Window {\n    ajv7: {\n      default: any;\n    };\n  }\n}\n\nexport type Options =\n  | Partial<{\n      baseUrl: string;\n      maxCalls: number;\n      delayBetweenCalls: number;\n      maxCodeLength: number;\n      useMarkingCode: boolean;\n    }>\n  | undefined;\n\nexport type TaskResponce = Partial<{\n  uuid: string;\n  number: number;\n  isBlocked: boolean;\n  blockedUUID: string;\n  error: {\n    code: number;\n    description: string;\n  };\n}>;\n\nexport enum TaskResultStatus {\n  ready = 'ready',\n  error = 'error',\n  wait = 'wait',\n  inProgress = 'inProgress',\n  interrupted = 'interrupted',\n  blocked = 'blocked',\n  canceled = 'canceled',\n}\n\nexport enum RequestTypes {\n  openShift = 'openShift',\n  closeShift = 'closeShift',\n  cashIn = 'cashIn',\n  cashOut = 'cashOut',\n  sell = 'sell',\n  sellReturn = 'sellReturn',\n  buy = 'buy',\n  buyReturn = 'buyReturn',\n  reportX = 'reportX',\n}\n\nexport type TaxationType =\n  | 'osn' // общая\n  | 'usnIncome' // упрощенная (Доход)\n  | 'usnIncomeOutcome' // упрощенная (Доход минус Расход)\n  | 'envd' // единый налог на вмененный доход\n  | 'esn' // единый сельскохозяйственный налог\n  | 'patent'; // патентная система налогообложения\n\nexport type TaskResultResponce = {\n  results: {\n    error: {\n      code: number;\n      description: string;\n    };\n    status: TaskResultStatus;\n  }[];\n};\n\nexport type Session = {\n  taxationType: TaxationType;\n  operator: {\n    name: string;\n    vatin?: string; // ИНН оператора\n  };\n};\n\nexport type PositionTax =\n  | 'none' // без НДС\n  | 'vat0' // НДС 0%\n  | 'vat10' // НДС 10%\n  | 'vat110' // НДС 10/110\n  | 'vat18' // НДС 18%\n  | 'vat118' // НДС 18/118%\n  | 'vat20' // НДС 20%\n  | 'vat120'; // НДС 20/120%\n\nexport type Item = {\n  type: 'position';\n  name: string; // Наименование\n  price: number; // Цена за единицу товара\n  quantity: number; // Количество товара\n  amount: number; // Сумма позиции\n  infoDiscountAmount?: number; // Информационная скидка. Не влияет на сумму позиции, остальные параметры должны передаваться с учетом её.\n  tax: {\n    type: PositionTax;\n    sum?: number; // Сумма налога\n  };\n  paymentMethod?:\n    | 'fullPrepayment' // По умолчанию: предоплата 100%\n    | 'prepayment' // предоплата\n    | 'advance' // аванс\n    | 'fullPayment' // полный расчет\n    | 'partialPayment' // частичный расчет и кредит\n    | 'credit' // передача в кредит\n    | 'creditPayment'; // оплата кредита\n  paymentObject?: 'commodity' | 'excise' | 'job' | 'service'; // По умолчанию: commodity\n  department?: number; // Отдел / секция. По умолчанию: 1\n  // Единицы измерения количества предмета расчета\n  measurementUnit?: string;\n  // • 0 - Применяется для предметов расчета, которые могут быть\n  // реализованы поштучно или единицами\n  // • 10 - Грамм\n  // • 11 - Килограмм\n  // • 12 - Тонна\n  // • 20 - Сантиметр\n  // • 21 - Дециметр\n  // • 22 - Метр\n  // • 30 - Квадратный сантиметр\n  // • 31 - Квадратный дециметр\n  // • 32 - Квадратный метр\n  // • 40 - Миллилитр\n  // • 41 - Литр\n  // • 42 - Кубический метр\n  // • 50 - Киловатт час\n  // • 51 - Гигакалория\n  // • 70 - Сутки (день)\n  // • 71 - Час\n  // • 72 - Минута\n  // • 73 - Секунда\n  // • 80 - Килобайт\n  // • 81 - Мегабайт\n  // • 82 - Гигабайт\n  // • 83 - Терабайт\n  // • 255 - Применяется при использовании иных единиц измерения\n  markingCode?: {\n    type?: 'other' | 'egais20' | 'egais30'; // Тип марки. По умолчанию: other\n    mark: string; // base64-представление кода маркировки\n  };\n};\n\nexport type Payment = {\n  type:\n    | 'cash' // наличными\n    | '0'\n    | 'electronicaly' // безналичными\n    | '1'\n    | 'prepaid' // предварительная оплата (аванс)\n    | '2'\n    | 'credir' // последующая оплата (кредит)\n    | '3'\n    | 'other' // иная форма оплаты (встречное предоставление)\n    | '4'\n    | string;\n  sum: number;\n};\n\nexport type MinimumArray<T> = [T, ...T[]];\n\nexport type Sell = {\n  items: MinimumArray<Item>;\n  payments: MinimumArray<Payment>;\n  total?: number; // Итог чека. Может отличаться от суммы позиций на значение,\n  // равное копейкам чека. Если не задан - высчитывается автоматически из суммы всех позиций\n};\n\nexport type SellRequest = { type: RequestTypes } & Session & Sell;\n\nexport type LegacyCallback = (success: boolean, data: any) => void;\n\nexport type AtolDriverInterface = {\n  openShift: () => Promise<AxiosPromise<TaskResponce>>;\n  closeShift: () => Promise<AxiosPromise<TaskResponce>>;\n  cashIn: (sum: number) => Promise<AxiosPromise<TaskResponce>>;\n  cashOut: (sum: number) => Promise<AxiosPromise<TaskResponce>>;\n  sell: (data: Sell) => Promise<AxiosPromise<TaskResponce>>;\n  reportX: () => Promise<AxiosPromise<TaskResponce>>;\n  checkStatus: (uuid: string, callIndex?: number) => Promise<TaskResultStatus>;\n  fprint: any;\n};\n\ntype LegacyPayment = {\n  value: number;\n  id: number;\n};\n\ntype LegacyProduct = {\n  discount: number;\n  description: string;\n  cost: number;\n  quantity: number;\n  name: string;\n  total: number;\n};\n\nexport type LegacyObject = {\n  hurry: number;\n  number: string;\n  other_payments: LegacyPayment[];\n  payments: {\n    card: number;\n    cash: number;\n  };\n  products: LegacyProduct[];\n  topay: number;\n  total_price: number;\n  user: string;\n};\n","import currency from 'currency.js';\nimport type { Item, Payment, LegacyObject } from './types';\nimport { getMarkingCode } from './helpers';\n\ntype legacyMapSellOptions = {\n  maxCodeLength?: number;\n  useMarkingCode?: boolean;\n};\n\nexport const legacyMapSell = (\n  data: LegacyObject,\n  options: legacyMapSellOptions = {\n    maxCodeLength: undefined,\n    useMarkingCode: true,\n  },\n): { items: Item[]; payments: Payment[] } => {\n  const { maxCodeLength, useMarkingCode } = options;\n  const payments: Payment[] = [];\n\n  console.log({ maxCodeLength });\n\n  if (data.payments.cash !== undefined) {\n    payments.push({\n      type: '0',\n      sum: data.payments.cash,\n    });\n  }\n\n  if (data.payments.card !== undefined) {\n    payments.push({\n      type: '1',\n      sum: data.payments.card,\n    });\n  }\n\n  function calcDiscountAmmount(item: LegacyObject['products']['0']) {\n    try {\n      const discount_multiplier = currency(item.discount).divide(100);\n      const result = currency(item.cost).multiply(discount_multiplier);\n\n      console.log(\n        'discount_multiplier',\n        discount_multiplier.value,\n        'result',\n        result.value,\n      );\n      return result.value;\n    } catch (error) {\n      console.log('[calcDiscountAmmount]', error);\n      return 0;\n    }\n  }\n\n  let full_cost = 0;\n\n  const items = data.products.map((item): Item => {\n    const itemDiscount = calcDiscountAmmount(item);\n    const price = currency(item.cost).subtract(itemDiscount).value;\n    const amount = currency(item.total).value;\n    const infoDiscountAmount = currency(itemDiscount).multiply(\n      item.quantity,\n    ).value;\n\n    full_cost += amount;\n\n    return {\n      type: 'position',\n      name: item.name,\n      price,\n      quantity: item.quantity,\n      amount,\n      infoDiscountAmount,\n      measurementUnit: 'шт',\n      tax: { type: 'none' },\n      ...(item.description && useMarkingCode\n        ? {\n            markingCode: getMarkingCode(item.description),\n          }\n        : undefined),\n    };\n  });\n\n  const hurryAmmout = currency(full_cost).multiply(\n    currency(data.hurry / 100),\n  ).value;\n\n  if (data.hurry > 0) {\n    items.push({\n      type: 'position',\n      name: 'Срочность',\n      price: hurryAmmout,\n      measurementUnit: 'шт',\n      quantity: 1,\n      amount: hurryAmmout,\n      tax: { type: 'none' },\n    });\n  }\n\n  console.log({ items, payments });\n\n  return {\n    items,\n    payments,\n  };\n};\n","import axios, { AxiosPromise } from 'axios';\nimport pkg from '../package.json';\nimport SessionSchema from './validation/Session.json';\nimport SellSchema from './validation/Sell.json';\nimport { v1 as buildUUID } from './uuid';\nimport { delay } from './helpers';\nimport {\n  Session,\n  Options,\n  TaskResponce,\n  TaskResultResponce,\n  TaskResultStatus,\n  RequestTypes,\n  Sell,\n  SellRequest,\n  LegacyCallback,\n} from './types';\nimport { legacyMapSell } from './mapping';\n\nlet ajv: any;\n\nif (window.ajv7) {\n  const Ajv = window.ajv7.default;\n\n  ajv = new Ajv({\n    allErrors: true,\n    removeAdditional: true,\n    useDefaults: true,\n  });\n}\n\nconst validateData = (schema: any, data: any) => {\n  if (window.ajv7) {\n    const validate = ajv.compile(schema);\n\n    if (!validate(data)) {\n      console.log(\n        '%c[ATOL] [validation]',\n        'color:red',\n        ajv.errorsText(validate.errors),\n      );\n      throw new Error(ajv.errorsText(validate.errors));\n    }\n  }\n};\n\nexport default (session: Session, options: Options) => {\n  const {\n    baseUrl,\n    maxCalls,\n    delayBetweenCalls,\n    maxCodeLength,\n    useMarkingCode,\n  } = {\n    baseUrl: 'http://127.0.0.1:16732',\n    maxCalls: 7,\n    delayBetweenCalls: 2000,\n    useMarkingCode: true,\n    ...options,\n  };\n\n  console.log(\n    `%c[ATOL] @bedunkevich/atol version: ${pkg.version}`,\n    'color:green',\n    { session },\n    { baseUrl, maxCalls, delayBetweenCalls, maxCodeLength },\n  );\n\n  const API = axios.create({\n    baseURL: baseUrl,\n    timeout: 20000,\n  });\n\n  const { operator, taxationType } = session;\n\n  validateData(SessionSchema, session);\n\n  const post = <T = unknown>(\n    uuid: string,\n    request: T,\n  ): Promise<AxiosPromise<TaskResponce>> => {\n    return API.post('/api/v2/requests', { uuid, request });\n  };\n\n  const get = (uuid: string): AxiosPromise<TaskResultResponce> => {\n    return API.get(`/api/v2/requests/${uuid}`);\n  };\n\n  /*\n   * Открытие смены\n   */\n  const openShift = async (): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    console.log(`%c[ATOL] [openShift] ${uuid}`, 'color:green');\n    try {\n      const responce = await post(uuid, [\n        {\n          type: RequestTypes[RequestTypes.openShift],\n          operator,\n        },\n      ]);\n      console.log(`%c[ATOL] [openShift] SUCCESS`, 'color:green', responce.data);\n      return responce;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.log(\n          `%c[ATOL] [openShift] FAIL`,\n          'color:red',\n          error.response?.data,\n        );\n      }\n      return error as any;\n    }\n  };\n\n  /*\n   * Закрытие смены\n   */\n  const closeShift = (): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.closeShift],\n        operator,\n      },\n    ]);\n  };\n\n  /*\n   * X-отчет\n   */\n  const reportX = (): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.reportX],\n        operator,\n      },\n    ]);\n  };\n\n  /*\n   * Внесение наличных\n   */\n  const cashIn = (cashSum: number): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.cashIn],\n        operator,\n        cashSum,\n      },\n    ]);\n  };\n\n  /*\n   * Выплата наличных\n   */\n  const cashOut = (cashSum: number): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n    return post(uuid, [\n      {\n        type: RequestTypes[RequestTypes.cashOut],\n        operator,\n        cashSum,\n      },\n    ]);\n  };\n\n  /*\n   * Чек прихода – продажа\n   */\n  const sell = (\n    data: Sell,\n    type: RequestTypes = RequestTypes.sell,\n  ): Promise<AxiosPromise<TaskResponce>> => {\n    const uuid = buildUUID();\n\n    validateData(SellSchema, data);\n\n    const task = {\n      type: RequestTypes[type],\n      taxationType,\n      operator,\n      ...data,\n    };\n    console.log(`%c[ATOL] [SELL] [${type}]`, 'color:green', task);\n\n    return post<SellRequest[]>(uuid, [task]);\n  };\n\n  /*\n   * Проверка статуса задания\n   */\n  const checkStatus = async (\n    uuid: string,\n    callIndex = 0,\n  ): Promise<TaskResultStatus> => {\n    try {\n      const {\n        data: { results },\n      } = await get(uuid);\n      const status = results?.[0]?.status;\n      console.log('%c[ATOL] [checkStatus]', 'color:green', results);\n\n      if (callIndex >= maxCalls) {\n        throw new Error('MAX_CALLS LIMIT!');\n      }\n\n      if (status !== TaskResultStatus['ready']) {\n        await delay(delayBetweenCalls);\n        return checkStatus(uuid, callIndex + 1);\n      }\n      return status;\n    } catch (error: any) {\n      console.log('%c[ATOL] [checkStatus]', 'color:red', error.message);\n\n      if (callIndex >= maxCalls) {\n        throw new Error('MAX_CALLS LIMIT!');\n      }\n\n      await delay(delayBetweenCalls);\n      return checkStatus(uuid, callIndex + 1);\n    }\n  };\n\n  const executeTask = async (fn: any, cb: LegacyCallback) => {\n    if (typeof cb !== 'function') {\n      throw new Error('CALLBACK should be a function!');\n    }\n    try {\n      const {\n        data: { uuid },\n      } = await fn();\n      if (!uuid) {\n        throw new Error('UUID cant be null | undefined!');\n      }\n      const status = await checkStatus(uuid);\n      console.log('%c[ATOL] [executeTask]', 'color:green', { uuid, status });\n      return cb(true, { code: 0, res: 'ok' });\n    } catch (error: any) {\n      console.log(error);\n      const {\n        error: { code, description },\n      } = error.response.data;\n      return cb(false, { code, res: description });\n    }\n  };\n\n  // Легаси\n  const fprint = {\n    report: async function (cb: LegacyCallback) {\n      await executeTask(() => reportX(), cb);\n    },\n    sell: async function (data: any, cb: LegacyCallback) {\n      console.log('%c[ATOL] [LEGACY]', 'color:green', data);\n      await executeTask(\n        () =>\n          sell(legacyMapSell(data, { useMarkingCode, maxCodeLength }) as any),\n        cb,\n      );\n    },\n    ret: async function (data: any, cb: LegacyCallback) {\n      await executeTask(\n        () =>\n          sell(\n            legacyMapSell(data, { maxCodeLength, useMarkingCode }) as any,\n            RequestTypes.sellReturn,\n          ),\n        cb,\n      );\n    },\n    open_session: async function (cb: LegacyCallback) {\n      await executeTask(() => openShift(), cb);\n    },\n    close_session: async function (cb: LegacyCallback) {\n      await executeTask(() => closeShift(), cb);\n    },\n    cash_income: async function (\n      data: { income: boolean; summ: number },\n      cb: LegacyCallback,\n    ) {\n      const fn = data.income\n        ? () => cashIn(data.summ)\n        : () => cashOut(data.summ);\n      await executeTask(fn, cb);\n    },\n  };\n\n  return {\n    openShift,\n    closeShift,\n    cashIn,\n    cashOut,\n    sell,\n    reportX,\n    checkStatus,\n    fprint,\n  };\n};\n","import API from './api';\nimport type { Session, Options } from './types';\n\nexport const init = ({\n  session,\n  options,\n}: {\n  session: Session;\n  options?: Options;\n}) => API(session, options);\n"],"names":["buildUUID"],"mappings":"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"}